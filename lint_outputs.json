[
    {
        "filePath": "/Users/dtavori/dev/demisto/content/Packs/Slack/Integrations/SlackEventCollector/SlackEventCollector.py",
        "fileType": "py",
        "entityType": "integration",
        "errorType": "Code",
        "name": "Slack Event Collector",
        "linter": "flake8",
        "severity": "error",
        "errorCode": "W293",
        "message": "blank line contains whitespace",
        "row": "47",
        "col": "1"
    },
    {
        "filePath": "/Users/dtavori/dev/demisto/content/Packs/Slack/Integrations/SlackEventCollector/SlackEventCollector.py",
        "fileType": "py",
        "entityType": "integration",
        "errorType": "Code",
        "name": "Slack Event Collector",
        "linter": "mypy",
        "severity": "error",
        "message": "Incompatible return value type (got \"Dict[Any, Any]\", expected \"List[Any]\") \n[return-value]\n            return self.get_logs(query_params)\n                   ^",
        "row": "43",
        "col": "16"
    },
    {
        "filePath": "/Users/dtavori/dev/demisto/content/Packs/Slack/Integrations/SlackEventCollector/SlackEventCollector.py",
        "fileType": "py",
        "entityType": "integration",
        "errorType": "Code",
        "name": "Slack Event Collector",
        "linter": "mypy",
        "severity": "error",
        "message": "Incompatible return value type (got \"Tuple[Any, CommandResults]\", expected\n\"List[Any]\")  [return-value]\n        return events, results\n               ^\nFound 2 errors in 1 file (checked 1 source file)",
        "row": "85",
        "col": "12"
    },
    {
        "filePath": "/Users/dtavori/dev/demisto/content/Packs/Slack/Integrations/SlackEventCollector/SlackEventCollector.py",
        "fileType": "py",
        "entityType": "integration",
        "errorType": "Code",
        "name": "Slack Event Collector",
        "linter": "xsoar_linter",
        "severity": "warning",
        "errorCode": "W9018",
        "message": "main: It is best practice for Integrations to raise a NotImplementedError when receiving a command which is not recognized. exception",
        "row": "99",
        "col": "0"
    },
    {
        "filePath": "/Users/dtavori/dev/demisto/content/Packs/Slack/Integrations/SlackEventCollector/SlackEventCollector.py",
        "fileType": "py",
        "entityType": "integration",
        "errorType": "Code",
        "name": "Slack Event Collector",
        "linter": "xsoar_linter",
        "severity": "warning",
        "errorCode": "W9018",
        "message": "main: It is best practice for Integrations to raise a NotImplementedError when receiving a command which is not recognized. exception",
        "row": "99",
        "col": "0"
    }
]